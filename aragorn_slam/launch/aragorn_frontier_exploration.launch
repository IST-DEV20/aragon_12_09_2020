<launch>

   <!-- Arguments -->
  <arg name="sensor_range" default="1.0"/>      
  <arg name="cmd_vel_topic" default="/cmd_vel" />
  <arg name="odom_topic" default="odom" />

  <arg name="configuration_basename" default="aragorn_lds_2d.lua"/>
  <arg name="open_rviz" default="true"/>
  <arg name="set_base_frame" default="base_footprint"/>
  <arg name="set_odom_frame" default="odom"/>
  <arg name="set_map_frame"  default="map"/>

  <!--Pub Robotstate TF-->
  <include file="$(find aragorn_bringup)/launch/aragorn_remote.launch">
  </include>

  <!-- Gmapping -->
  <node pkg="gmapping" type="slam_gmapping" name="aragorn_slam_gmapping" args="$(arg configuration_basename)" output="screen">
    <param name="base_frame" value="$(arg set_base_frame)"/>
    <param name="odom_frame" value="$(arg set_odom_frame)"/>
    <param name="map_frame"  value="$(arg set_map_frame)"/>
    <rosparam command="load" file="$(find aragorn_slam)/config/gmapping_params.yaml" />
  </node>

  <!-- AMCL -->
  <include file="$(find aragorn_navigation)/launch/amcl.launch"/>

  <!-- move_base -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
    <rosparam file="$(find aragorn_navigation)/param/costmap_common_params_aragorn.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find aragorn_navigation)/param/costmap_common_params_aragorn.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find aragorn_navigation)/param/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find aragorn_navigation)/param/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find aragorn_navigation)/param/move_base_params.yaml" command="load" />
    <rosparam file="$(find aragorn_navigation)/param/dwa_local_planner_params_aragorn.yaml" command="load" />
    <remap from="cmd_vel" to="$(arg cmd_vel_topic)"/>
    <remap from="odom" to="$(arg odom_topic)"/>
  </node>

  <!-- frontier_exploration -->
    <arg name="plugin" default="exploration_server::ExamplePlugin"/>
    <param name="plugin_name" value="$(arg plugin)"/>
    <arg name="blacklist_box_size" default="0.5"/>
    <param name="blacklist_box_size" value="$(arg blacklist_box_size)"/>

    <!-- Set to your sensor's range -->

    <node pkg="exploration_server" type="plugin_client" name="plugin_client" output="screen">
    </node>

    <node pkg="exploration_server" type="exploration_server_node" name="exploration_server_node" output="screen">

        <rosparam param="points" ns="explore_costmap" file="$(find exploration_server)/config/points.yaml" command="load"/>
        <param name="frequency" type="double" value="2.0"/>
        <param name="goal_aliasing" type="double" value="$(arg sensor_range)"/>

        #All standard costmap_2d parameters as in move_base, other than PolygonLayer
        <rosparam ns="explore_costmap" subst_value="true">
            
            footprint: [[-0.205, -0.155], [-0.205, 0.155], [0.077, 0.155], [0.077, -0.155]]
            

            transform_tolerance: 0.5
            update_frequency: 5.0
            publish_frequency: 5.0

            #must match incoming static map
            global_frame: map
            robot_base_frame: base_link
            resolution: 0.05

            rolling_window: false
            track_unknown_space: true

            plugins:

                - {name: static,           type: "costmap_2d::StaticLayer"}
                - {name: polygon_layer,    type: "polygon_layer::PolygonLayer"}
                #Can disable sensor layer if gmapping is fast enough to update scans
                - {name: sensor,           type: "costmap_2d::ObstacleLayer"}
                - {name: inflation,        type: "costmap_2d::InflationLayer"}

            static:
                #Can pull data from gmapping, map_server or a non-rolling costmap
                map_topic: /map
                # map_topic: move_base/global_costmap/costmap
                subscribe_to_updates: true

            polygon_layer:
                resize_to_polygon: true

            sensor:
                observation_sources: laser
                laser: {data_type: LaserScan, clearing: true, marking: true, topic: scan, inf_is_valid: true, raytrace_range: $(arg sensor_range), obstacle_range: $(arg sensor_range)}

            inflation:
                inflation_radius: 0.15
      </rosparam>

    </node>

  <group if="$(arg open_rviz)"> 
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find aragorn_slam)/rviz/aragorn_frontier_exploration.rviz"/>
  </group>

  <node pkg="aragorn_slam" name="srv_map_saver" type="srv_map_saver" output="screen">
  </node>

</launch>